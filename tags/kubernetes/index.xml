<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Wei's Home</title><link>https://localhost:1313/tags/kubernetes/</link><description>Recent content in Kubernetes on Wei's Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>guow1227@gmail.com (Wei Guo)</managingEditor><webMaster>guow1227@gmail.com (Wei Guo)</webMaster><copyright>© 2025 Wei Guo</copyright><lastBuildDate>Thu, 25 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://localhost:1313/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>How to pass data in JSON format in config map to the microservice</title><link>https://localhost:1313/blog/pass-data-in-json/pass-data-in-json/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><author>guow1227@gmail.com (Wei Guo)</author><guid>https://localhost:1313/blog/pass-data-in-json/pass-data-in-json/</guid><description>&lt;!-- markdownlint-disable MD010 -->
&lt;p>When we have little data need to pass from helm chart to service, it quit easy to use the &lt;code>container.env&lt;/code> part in the &lt;code>deployment.yaml&lt;/code>. So that we could just &lt;code>os.getEnv()&lt;/code> in the code, we got the value we want.&lt;/p></description></item><item><title>Kubernetes probes and pod lifecycle</title><link>https://localhost:1313/blog/kubernetes-pods-lifecycle/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><author>guow1227@gmail.com (Wei Guo)</author><guid>https://localhost:1313/blog/kubernetes-pods-lifecycle/</guid><description>&lt;ul>
&lt;li>Readiness and Liveness probe
&lt;a
href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#before-you-begin"
target="_blank"
>Configure Liveness, Readiness and Startup Probes | Kubernetes&lt;/a>
&lt;ul>
&lt;li>The &lt;a
href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/"
target="_blank"
>kubelet&lt;/a> uses liveness probes to know when to restart a container. For example, liveness probes could catch a deadlock, where an application is running, but unable to make progress. Restarting a container in such a state can help to make the application more available despite bugs.&lt;/li>
&lt;li>The kubelet uses readiness probes to know when a container is ready to start accepting traffic. A Pod is considered ready when all of its containers are ready. One use of this signal is to control which Pods are used as backends for Services. When a Pod is not ready, it is removed from Service load balancers.&lt;/li>
&lt;li>The readiness check will continuously run in the pod lifecycle.
&lt;blockquote>
&lt;p>As long as Liveness Probe passed, the pod status changed to &lt;code>running&lt;/code>. If you want to connect to a pod when it is ready for traffic, it is better to check the &lt;code>ready&lt;/code> keywords.&lt;/p></description></item></channel></rss>