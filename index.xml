<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wei's Home</title><link>https://localhost:1313/</link><description>Recent content on Wei's Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>guow1227@gmail.com (Wei Guo)</managingEditor><webMaster>guow1227@gmail.com (Wei Guo)</webMaster><copyright>© 2024 Wei Guo</copyright><lastBuildDate>Sun, 01 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://localhost:1313/index.xml" rel="self" type="application/rss+xml"/><item><title>Ansible complex set up error handling</title><link>https://localhost:1313/blog/ansible-ignore-errors/ansible-ignore-errors/</link><pubDate>Wed, 14 Aug 2024 00:00:00 +0000</pubDate><author>guow1227@gmail.com (Wei Guo)</author><guid>https://localhost:1313/blog/ansible-ignore-errors/ansible-ignore-errors/</guid><description>Handling errors during environment configuration with Ansible is crucial. While ignore_errors and fails_when keywords exist, they only apply to specific tasks, not to roles or entire playbooks.
Problem Description # ignore_errors=true is ineffective in Ansible roles, only working within sessions.</description></item><item><title>How to pass data in JSON format in config map to the microservice</title><link>https://localhost:1313/blog/pass-data-in-json/pass-data-in-json/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><author>guow1227@gmail.com (Wei Guo)</author><guid>https://localhost:1313/blog/pass-data-in-json/pass-data-in-json/</guid><description>When we have little data need to pass from helm chart to service, it quit easy to use the container.env part in the deployment.yaml. So that we could just os.</description></item><item><title>Kubernetes probes and pod lifecycle</title><link>https://localhost:1313/blog/kubernetes-pods-lifecycle/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><author>guow1227@gmail.com (Wei Guo)</author><guid>https://localhost:1313/blog/kubernetes-pods-lifecycle/</guid><description>Readiness and Liveness probe Configure Liveness, Readiness and Startup Probes | Kubernetes The kubelet uses liveness probes to know when to restart a container. For example, liveness probes could catch a deadlock, where an application is running, but unable to make progress.</description></item></channel></rss>